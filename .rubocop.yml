inherit_from:
  - vendor/hound/config/style_guides/ruby.yml

# 自動生成されるものはチェック対象から除外する
AllCops:
  Exclude:
    - "bin/*"
    - "vendor/**/*" # rubocop config/default.yml
    - "db/schema.rb"
    - "Guardfile"
    - "config/unicorn"
  DisplayCopNames: true

##################### Style ##################################

# redirect_to xxx and return のイディオムを維持したい
Style/AndOr:
  EnforcedStyle: conditionals

# 日本語のコメントを許可する
Style/AsciiComments:
  Enabled: false

# option 等、明示的にハッシュにした方が分かりやすい場合もある
Style/BracesAroundHashParameters:
  Enabled: false

# Hash#has_key? は許可したい
Style/DeprecatedHashMethods:
  Enabled: false

# ドキュメントの無い public class を許可する
Style/Documentation:
  Enabled: false

# !! のイディオムは積極的に使う
Style/DoubleNegation:
  Enabled: false

# メソッドチェーンの改行は末尾に . を入れる
# REPL に貼り付けた際の暴発を防ぐため
Style/DotPosition:
  EnforcedStyle: trailing

# いずれかに揃えるのならば `sprintf` や `format` より String#% が好きです
Style/FormatString:
  EnforcedStyle: percent

# if 文の中に 3 行程度のブロックを書くぐらいは許容した方が現実的
Style/GuardClause:
  MinBodyLength: 5

# rake タスクの順序の hash は rocket を許可する
Style/HashSyntax:
  Exclude:
    - "**/*.rake"

# 条件式の方を意識させたい場合には後置の if/unless を使わない方が分かりやすい
Style/IfUnlessModifier:
  Enabled: false

# ({ と hash を開始した場合に ( の位置にインデントさせる
Style/IndentHash:
  EnforcedStyle: consistent

# scope 等は複数行でも lambda ではなく ->{} で揃えた方が見た目が綺麗
Style/Lambda:
  Enabled: false

# 86400 やポート番号等、5 桁までは割と頻出するので許可する
Style/NumericLiterals:
  MinDigits: 6

# has_ から始まるメソッドは許可する
Style/PredicateName:
  NamePrefixBlacklist:
    - "is_"
    - "have_"
  NamePrefix:
    - "is_"
    - "have_"

# 特に model 内において、ローカル変数とメソッド呼び出しの区別をつけた方が分かりやすい場合が多い
Style/RedundantSelf:
  Enabled: false

# 受け取り側で multiple assignment しろというのを明示
Style/RedundantReturn:
  AllowMultipleReturnValues: true

# 正規表現中に1つでも / があれば %r() を使う
Style/RegexpLiteral:
  MaxSlashes: 0

# fail と使い分ける必要ナシ
Style/SignalException:
  EnforcedStyle: only_raise

# いくらなんでも inject { |a, e| } は短すぎるので分かりやすい名前をつけたい
Style/SingleLineBlockParams:
  Enabled: false

# * migrate
# * jbuilder
# * model の association
# * controller の callback
# 辺りの桁揃えで引っかかるので全体的にチェックしない
Style/SingleSpaceBeforeFirstArg:
  Enabled: false

# 複数行の場合はケツカンマを入れる
Style/TrailingComma:
  EnforcedStyleForMultiline: comma

Style/MultilineBlockLayout:
  Enabled: true
  Exclude:
    - 'spec/**/*.rb'

Style/Blocks:
  Enabled: true
  Exclude:
    - 'spec/**/*.rb'

Style/BlockEndNewline:
  Enabled: true
  Exclude:
    - 'spec/**/*.rb'

Style/WhenThen:
  Enabled: false

Style/UnneededPercentX:
  Enabled: false

Style/Semicolon:
  Enabled: false

Style/ExtraSpacing:
  Enabled: false

Style/StringLiterals:
  EnforcedStyle: single_quotes

Style/NestedTernaryOperator:
  Enabled: false

Style/MultilineTernaryOperator:
  Enabled: false

Style/Blocks:
  Enabled: false

Style/BlockDelimiters:
  Enabled: true
  Exclude:
    - 'spec/**/*.rb'

Style/SpaceAroundOperators:
  Enabled: false

##################### Lint ##################################

# * 同名のメソッドがある場合にローカル変数に `_` を付ける
# * 一時変数として `_` を付ける
# というテクニックは頻出する
Lint/UnderscorePrefixedVariableName:
  Enabled: false

# 子クラスで実装させるつもりのメソッドで引っかかるので
Lint/UnusedMethodArgument:
  Enabled: false

Lint/HandleExceptions:
  Enabled: false

##################### Metrics ##################################

# 30 まではギリギリ許せる範囲だった
Metrics/AbcSize:
  Max: 30

# 6 は強すぎるので緩める
Metrics/CyclomaticComplexity:
  Max: 10

# * 警告 120文字
# * 禁止 160文字
# のイメージ
Metrics/LineLength:
  Max: 160
  Exclude:
    - "db/migrate/*.rb"

# 20 行超えるのは migration ファイル以外滅多に無い
Metrics/MethodLength:
  Max: 25
  Exclude:
    - "db/migrate/*.rb"

# 分岐の数。ガード句を多用しているとデフォルト 7 だと厳しい
Metrics/PerceivedComplexity:
  Max: 8
